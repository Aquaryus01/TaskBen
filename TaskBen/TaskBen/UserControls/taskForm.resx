<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jwCEQwCM4BWARwDCIQBGEACPAIRDAIwgAB4BCIcAGEEAPAIQDgEwggB4BCAcAmAEAfAIQDgEwAgC4BGA
        cAiAEQTAIwDhEAAjCIBHAMIhAEYQAI8AhEMAjCAAHgEIhwAYQQA8AhAOATCCAHgEIBwCYAQB8AhAOATA
        CALgEYBwCIARBMAjAOEQACMIgEcAwiEARhAAjwCEQwCMIAAeAQiHABhBADwCEA4BMIIAeAQgHAJgBAHw
        CEA4BMAIAuARgHAIgBEEwCMA4RAAIwiARwDCIQBGEACPAIRDAIwgAB4BCIcAGEEAPAIQDgEwggB4BCAc
        AmAEAfAIQDgEwAgC4BGAcAiAEQTAIwDhEAAjCIBHAMIhAEYQAI8AhEMAjCAAHgEIhwAYQQA8AhAOATCC
        AHgEIBwCYAQB8AhAOATACALgEYBwCIARBMAjAOEQACMIgEcAwiEARhAAjwCEQwCMIAAeAQiHABhBADwC
        EA4BMIIAeAQgHAJgBAHwCEA4BMAIAuARgHAIgBEEwCMA4RAAIwiARwDCIQBGEACPAIRDAIwgAB4BCIcA
        GEEAPAIQDgEwggB4BCAcAmAEAfAIQDgEwAgC4BGAcAiAEQTAIwDhEAAjCIBHAMIhAEYQAI8AhEMAjCAA
        HgEIhwAYQQA8AhAOATCCAHgEIBwCYAQB8AhAOATACALgEYBwCIARBMAjAOEQACMIgEcAwiEARhAAjwCE
        QwCMIAAeAQiHABhBADwCEA4BMIIAeAQgHAJgBAHwCEA4BMAIAuARgHAIgBEEwCMA4RAAIwiARwDCIQBG
        EACPAIRDAIwgAB4BCIcAGEEAPAIQDgEwggB4BCAcAmAEAfAIQDgEwAgC4BGAcAiAEQTAIwDhEAAjCIBH
        AMIhAEYQAI8AhEMAjCAAHgEIhwAYQQA8AhAOATCCAHgEIBwCYAQB8AhAOATACALgEYBwCIARBMAjAOEQ
        ACMIgEcAwiEARhAAjwCEQwCMIAAeAQiHABhBADwCEA4BMIIAeAQgHAJgBAHwCEA4BMAIAuARgHAIgBEE
        wCMA4RAAIwiARwDCIQBGEACPAIRDAIwgAB4BCIcAGEEAPAIQDgEwggB4BCAcAmAEAfAIQDgEwAgC4BGA
        cAiAEQTAIwDhEAAjCIBHAMIhAEYQAI8AhEMAjCAAHgEIhwAYQQA8AhAOATCCAHgEIBwCYAQB8AhAOATA
        CALgEYBwCIARBMAjAOEQACMIgEcAwiEARhAAjwCEQwCMIAAeAQiHABgR+wD0GEQAPke7A3DZ9fPUdkMg
        AEbEPgDdBjap7UaBVwDhEAAjeAXg5VsAKn56HQHYSXJoGQHw8u4VwM9unKW2GwIBMCLyANw/d6y63XQV
        HnSC3G4UCvbsmWp5f+2haj/S0fz2qh5qu1GpGDVhvtqPdK0/57JlarshEAAjog7AxjsenqBuN12JfXvL
        7UalecXqrmo/0lE3e+Fwtc2orD/3ilfVfqQredSQCrXdEAiAEVEHoOKSax9Xt5uO5jff61nwxe/I7Ual
        fuGzQ9S+pKNs0MgVaptRKex0XNvN6n1JR9EhJ8nthkAAjIg6AIn9+qQ2F5fto257RyrH3DBHbTNKpf0v
        WqP2ZUdaE8n9Cw/sJ7cZmQ5dU/WPPzdY7c+O1M58bJTcZiAEwIioA+BU/eJXD6jb3p6WDwsOTPzT9+T2
        olSwd69U43Ov9lf7tD1VP7/5EbW9qCV7n1Oh9mdHkn2GrlfbC4UAGJGJALiX8fWLnk/7O9WWyurdS477
        YUJtKxOKupze0vpx0dfUvikNT708wJ1AVNvKhJ0NbNW46GNFAIzIRAAcdzLPnSRT+/BZrR8Vdio95eLV
        ahuZVPzds2qaXnunj9rHz9p035yx7lWD2kYmuVcgav+2VfmvN81UXx+ae/zU7Vsnh5ZV33RPRgLwKXei
        rH7B4v93om1zafmXq2+86/bCbxwvvy4b3Hd1909t7p/3tt3fhv99cWDZ2aMj+2e0XZE88pwNNbfNmLTt
        vjob7575C/fn6uuikOx7XonaD+vk0DL3pFMHMGqJrx6dKj35wjVlg0cvLzq0fyqxz5Hy78WB+xGm8GvH
        bP15u7jr95sSXzlq6wk49XfjwO1f0WGnpEpP/fHqosNP27J1f8Xfi5KLo1pv1smhZTX/ce8UdQCB9lg/
        5PJ2vUchruTQstpZC0aoAwi0R9VVUx9S6806ObTMneha17G7PIjArqr93fxRar1ZJ4fWJQ7oKw8isKvq
        //zU+WqtWSeH1pWeNnyVOojArnAf4NqcXL9L7/6MOzm0rmba9KnqQAK7onTAiJVqneUCObTOnQfI5jvZ
        kFvSecOXVXKYC9yHYNTBBHaGe79Err78d+QwF9Q9+uQwdUCBnVF15ZSZan3lCjnMFdn8AA7scyf/3Mei
        1drKFXKYKxqeeeXUgi/wngDsmvZe/9ECOcwlVb/89X3q4ALb4z7kpdZTrpHDXMOPAtgZhV8/tl0XU7VE
        DnONO5iFB58oDzbwWe5TnHV/+p8L1DrKRXKYixpfXNaPCGB73MekN02fnfM/93+WHOYq9wahTP5yTthR
        8KXvpjY9MHeMWje5TA5zWcuadQe6C3eoRYD85C4nXv/Y00PVesl1cpgPqq6e9pD71VlqQSB/rB865hV3
        3Ua1RvKBHOaLxiXLjy096cK1amEgtxX3PLO29g9/GaHWRT6Rw3zjXv65T3xl+rf2IMM6dN36xN945yPt
        +vVuuUQO85X7bbgbJt5xl7v4ZJwv6omdsHu3rVf0dZcPb3jihTPVcc9ncoh/nCxsWvZu79qH/vvyDf92
        y3T3q6fdIkLMjZ08y12/b+NvHrqu8dml/Vv+uuYwdXzxD3IIID/IIYD8IIcA8oMcAsgPcgggP8ghgHyQ
        2u3vBSgznPrjm0IAAAAASUVORK5CYII=
</value>
  </data>
</root>